services:
  feedmanager.silo:
    image: csrakowski/feedmanagersilo
    build:
      context: .
      dockerfile: src/FeedManager.Silo/Dockerfile
      no_cache: true
    volumes:
      - lv_silo:/var/log/
    ports:
      - "8443:443"
    environment:
      REDIS_URL: "redis:${REDIS_PORT}"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otlp:4317"
      OTEL_METRIC_EXPORT_INTERVAL: 5000 # so we don't have to wait 60s for metrics
    healthcheck:
      test: wget --no-verbose --tries=1 --spider --no-check-certificate https://localhost/healthCheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
      start_interval: 5s
    depends_on:
      redis:
        condition: service_healthy
      otlp:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    mem_limit: 512m
    cpus: 0.5

  feedmanager.webclient:
    image: csrakowski/feedmanagerwebclient
    build:
      context: .
      dockerfile: src/FeedManager.WebClient/Dockerfile
      no_cache: true
    volumes:
      - lv_webclient:/var/log/
    ports:
      - "5443:443"
    environment:
      REDIS_URL: "redis:${REDIS_PORT}"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otlp:4317"
      OTEL_METRIC_EXPORT_INTERVAL: 5000 # so we don't have to wait 60s for metrics
    healthcheck:
      test: wget --no-verbose --tries=1 --spider --no-check-certificate https://localhost/healthCheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
      start_interval: 5s
    depends_on:
      redis:
        condition: service_healthy
      otlp:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    mem_limit: 512m
    cpus: 0.5

  redis:
    image: redis/redis-stack:latest
    volumes:
      - lv_redis:/data/
    ports:
      - "${REDIS_PORT}:6379"
      - "8001:8001"
    environment:
      REDIS_ARGS: "--appendonly yes --save 60 1"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s  # Check every 10 seconds
      retries: 3     # Retry 3 times before considering unhealthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    mem_limit: 512m
    cpus: 0.5

  krakend:
    image: krakend:latest
    volumes:
      - lv_krakend:/etc/krakend/
    ports:
      - "8080:8080"
      - "8090:8090"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider --no-check-certificate http://localhost:8080/__health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
      start_interval: 5s
    depends_on:
      feedmanager.silo:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    mem_limit: 256m
    cpus: 0.25

  otlp:
    image: "grafana/otel-lgtm"
    volumes:
      - lv_otlp_data:/data/
      #- ./configs/otel-collector-config-connector.yml:/etc/otelcol/otel-collector-config.yml
      #- "./configs/prometheus.yml:/etc/prometheus/prometheus.yml"
      #- ./configs/grafana.ini:/etc/grafana/grafana.ini
      #- ./configs/grafana_datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    #environment:
      #- GF_AUTH_ANONYMOUS_ENABLED=true
      #- GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      #- GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "4317:4317"
      - "3000:3000"
      - "4318:4318"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    mem_limit: 1G
    cpus: 0.5


volumes:
  lv_redis: {}
  lv_silo: {}
  lv_webclient: {}
  lv_krakend: {}
  lv_otlp_data: {}
